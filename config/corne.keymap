/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    combos {
        compatible = "zmk,combos";

        controlLayer {
            bindings = <&to 3>;
            key-positions = <37 40>;
        };

        to_num_pad {
            bindings = <&to 4>;
            key-positions = <36 2>;
            layers = <1 0 2>;
        };

        multiply_on_num {
            bindings = <&kp ASTERISK>;
            key-positions = <10 41>;
            layers = <4>;
        };

        divide_num_pad {
            bindings = <&kp SLASH>;
            key-positions = <41 11>;
            layers = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E             &kp R  &kp T      &kp Y      &kp U  &kp I      &kp O    &kp P          &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D             &kp F  &kp G      &kp H      &kp J  &kp K      &kp L    &kp SEMICOLON  &kp ENTER
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C             &kp V  &kp B      &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp RSHIFT
                                &mt LEFT_ALT ESC  &mo 1  &kp RET    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp ESC     &kp N1         &kp N2         &kp N3        &kp N4        &kp N5          &kp N6         &kp N7       &kp N8   &kp N9     &kp N0           &kp DELETE
&bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT       &kp DOWN     &kp UP   &kp RIGHT  &kp SQT          &kp ESC
&kp LSHFT   &bt BT_DISC 0  &bt BT_DISC 1  &to 4         &to 4         &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP  &kp END  &trans     &rgb_ug RGB_TOG  &kp LGUI
                                          &trans        &trans        &kp SPACE       &trans         &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp GRAVE  &kp EXCL       &kp AT            &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp CAPS   &kp LESS_THAN  &kp GREATER_THAN  &trans    &trans    &kt CAPS     &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp SQT   &kp BACKSLASH
&kp LSHFT  &trans         &trans            &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp RIGHT_SHIFT
                                            &kp LGUI  &trans    &kp ENTER    &kp SPACE  &trans     &kp RALT
            >;
        };

        controls {
            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_COLOR_HSB(233,100,50)  &rgb_ug RGB_COLOR_HSB(0,98,51)    &none  &none  &none    &ext_power EP_ON   &none  &none  &none  &none  &kp C_VOLUME_UP
&rgb_ug RGB_BRD  &rgb_ug RGB_COLOR_HSB(164,97,51)   &rgb_ug RGB_COLOR_HSB(58,93,50)   &none  &none  &none    &ext_power EP_OFF  &none  &none  &none  &none  &kp C_VOLUME_DOWN
&rgb_ug RGB_TOG  &rgb_ug RGB_COLOR_HSB(0,94,39)     &rgb_ug RGB_COLOR_HSB(116,90,48)  &none  &none  &none    &soft_off          &none  &none  &none  &none  &kp C_MUTE
                                                                                      &none  &to 0  &none    &kp SPACE          &none  &none
            >;
        };

        num_pad {
            bindings = <
&none  &kp F1  &kp F2  &kp F3  &kp F4  &none    &kp N7  &kp N8   &kp N9           &kp MINUS  &kp LPAR      &kp RPAR
&none  &none   &none   &none   &none   &none    &kp N4  &kp N5   &kp N6           &kp PLUS   &kp LBKT      &kp RBKT
&none  &none   &none   &none   &none   &none    &kp N1  &kp N2   &kp N3           &kp RET    &kp LS(LBRC)  &kp LS(RIGHT_BRACE)
                       &none   &to 0   &none    &kp N0  &kp DOT  &kp RIGHT_SHIFT
            >;
        };
    };
};
